<launch>
  <!-- start basic args -->
  <arg name="veh" value="$(env VEHICLE_NAME)"/>
  <arg name="config" default="baseline" />
  <arg name="param_file_name" default="default" />
  <arg name="visualization" default="true" />
  <arg name="verbose" default="true" />
  <!-- end basic args -->
 
<!-- the things that are "on" by default: 
 - camera
 - wheels
 - joystick
 - lane_following stack
 - fsm
-->

  <!-- start switch args -->
  <arg name="camera" default="true"/>
  <group if="$(arg camera)">
    <arg name="raw" default="true"/>
    <arg name="cam_info" default="true"/>
  </group>
  <arg name="wheels" default="true"/>
  <arg name="joystick" default="true"/>
  <arg name="lane_following" default="true"/>
  <group if="$(arg lane_following)">
    <arg name="line_detection" default="true"/>
    <arg name="white_balance" default="true" />
    <arg name="ground_projection" default="true"/>
    <arg name="lane_filter" default="true"/>
    <arg name="stop_line_filter" default="true"/>
    <arg name="lane_controller" default="true"/>
  </group>
  <arg name="fsm" default="true"/>
  <arg name="obstacle_avoidance" default="false"/>
  <group if="$(arg obstacle_avoidance)">
    <arg name="simple_stop" default="true"/>
    <arg name="object_detection" default="true"/>
    <arg name="object_safety" default="true"/>
  </group>
  <arg name="vehicle_avoidance" default="false"/>
  <group if="$(arg vehicle_avoidance)">
    <arg name="vehicle_detection" default="true" />
    <arg name="vehicle_filter" default="true" />
    <arg name="vehicle_control" default="true"/>
  </group>
  <arg name="apriltags" default="false"/>
  <group if="$(arg apriltags)">
    <arg name="preprocessing" default="true"/>
    <arg name="global" default="true"/>
    <arg name="fast" default="false" /> <!-- default to false for fast apriltags -->
    <art name="postprocessing" default="true" />
  </group>
  <arg name="LED" default="false" />
  <group if="$(arg LED">
    <arg name="LED_detector" default="true" />
    <arg name="LED_joystick" default="true" />
    <arg name="LED_emitter"  default="true" />
    <arg name="LED_interpreter" default="false" />
  </group>
  <arg name="odometry_learning" default="false"/>
  <group if="$(arg odometry_learning)">
    <arg name="kinematics" default="true"/>
    <arg name="learning"  default="false"/>
    <arg name="visual_odometry" default="false"/>
  </group>
  <arg name="coordination" default="false"/>
  <arg name="navigation" default="false"/>
  <group>
    <arg name="intersection_control" default="true"/>
    <arg name="apriltags_random" default="true"/>
    <arg name="graph_planner" default="false"/>
  </group>
  <arg name="global_localizer" default="false"/>
  <arg name="SLAM" default="false"/>
  <arg name="anti_instagram" default="false"/>
  <!-- end switch args -->
  

  <!-- Start Camera -->  
  <group if="$(arg camera)">
    <include  file="$(find pi_camera)/launch/camera_node.launch">
      <arg name="veh" value="$(arg veh)"/>
      <arg name="config" value="$(arg config)"/>
      <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>
    <!-- decoder_node -->
    <group if="$(arg raw)">
      <remap from="decoder_node/compressed_image" to="camera_node/image/compressed"/>
      <remap from="decoder_node/image/raw" to="camera_node/image/raw"/>
      <include file="$(find pi_camera)/launch/decoder_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
  
    <!-- cam_info_reader_node -->
    <group if="$(arg cam_info)">
      <remap from="cam_info_reader_node/camera_info" to="camera_node/camera_info"/>
      <remap from="cam_info_reader_node/compressed_image" to="camera_node/image/compressed"/>
      <include file="$(find pi_camera)/launch/cam_info_reader_node.launch"> 
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>            
      </include>
    </group>
  </group>
  <!-- End Camera -->

  <!-- Start Wheels -->
  <group if="$(arg wheels)">
    <!-- Wheel Driver -->
    <include file="$(find dagu_car)/launch/wheels_driver_node.launch">
      <arg name="veh" value="$(arg veh)"/>
    </include>

    <include file="$(find kinematics)/launch/inverse_kinematics_node.launch">
      <arg name="veh" value="$(arg veh)"/>
    </include>
  </group>
  <!-- End Wheels -->

  <!-- Start FSM -->
  <group if="$(arg fsm)">
    <!-- FSM -->
    <remap from="fsm_node/lane_pose" to="lane_filter_node/lane_pose"/>
    <remap from="fsm_node/stop_line_reading" to="stop_line_filter_node/stop_line_reading"/>
    <remap from="fsm_node/clearance_to_go" to="veh_coordinator_node/clearance_to_go"/>
    <remap from="fsm_node/intersection_done" to="open_loop_intersection_control_node/intersection_done"/>
    <remap from="fsm_node/object_too_close" to="obstacle_safety_node/object_too_close"/>

    <include file="$(find fsm)/launch/fsm_node.launch">
      <arg name="veh" value="$(arg veh)"/>        
      <arg name="config" value="$(arg config)"/>        
      <arg name="param_file_name" value="$(arg param_file_name)"/>        
    </include>

    <!-- car_cmd_switch_node -->
    <remap from="car_cmd_switch_node/cmd_lane_following" to="lane_controller_node/lane_control"/> <!-- need either lots more of these or none of these -->
    <include file="$(find dagu_car)/launch/car_cmd_switch_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="local" value="$(arg local)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>
  </group>

  <!--End FSM -->

  <!-- Start Lane Following -->
  <group if="$(arg lane_following)">

    <!-- Line Detector -->
    <group if="$(arg line_detection)">
      <remap from="line_detector_node/image" to="camera_node/image/compressed"/>
      <include file="$(find line_detector)/launch/line_detector_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
        <arg name="white_balance" value="$(arg white_balance)" />
        <arg name="verbose" value="$(arg verbose)" />
      </include>	
    </group>
    
    <!-- Ground projection -->
    <group if="$(arg ground_projection)">
      <include file="$(find ground_projection)/launch/ground_projection.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
	
    <!-- Lane Filter -->
    <group if="$(lane_filter)">
      <remap from="lane_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
      <include file="$(find lane_filter)/launch/lane_filter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Stop Line Filter -->
    <group if="$(arg stop_line_filter)">      <remap from="stop_line_filter_node/lanewidth" to="lane_filter_node/lanewidth"/>
      <remap from="stop_line_filter_node/lane_pose" to="lane_filter_node/lane_pose"/>
      <remap from="stop_line_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
      <include file="$(find stop_line_filter)/launch/stop_line_filter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Lane controller -->
    <group if="$(arg lane_controller)">
      <remap from="lane_controller_node/lane_pose" to="lane_filter_node/lane_pose"/>
      <include if="lane_controller" file="$(find lane_control)/launch/lane_controller_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>        
      </include>
    </group>

  </group>
  <!-- End Lane Control -->

  <!-- Start Obstacle Avoidance -->
  <group if="$(arg obstacle_avoidance)">
    
    <!-- Object Detection -->
    <group if="$(arg object_detector)">
      <remap from="static_object_detector_node/image_compressed" to="camera_node/image/compressed"/>
      <include file="$(find mdoap)/launch/static_object_detector_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Object Safety -->
    <group if="$(arg object_safety)">
      <remap from="obstacle_safety_node/detection_list" to="static_object_detector_node/detection_list"/>
      <include file="$(find mdoap)/launch/obstacle_safety_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Simple Stop Controller -->
    <group if="$(arg simple_stop)">
      <remap from="simple_stop_controller_node/too_close" to="obstacle_safety_node/object_too_close"/>
      <include file="$(find mdoap)/launch/simple_stop_controller_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
  </group> 

  <!-- Start Vehicle Avoidance -->
  <group if="$(arg vehicle_avoidance)">

    <!-- Vehicle Detection Node -->
    <group if="$(arg vehicle_detection)">
      <include file="$(find vehicle_detection)/launch/vehicle_detection_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)" />
      </include>
    </group>
  
    <!-- Vehicle Filter Node -->
    <group if="$(arg vehicle_filter)">
      <include file="$(find vehicle_detection)/launch/vehicle_filter.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)" />
      </include>	
    </group>
    <!-- Vehicle Control Node -->
    <group if="$(arg vehicle_control)">
      <include file="$(find vehicle_detection)/launch/vehicle_avoidance_control_node.launch" >
	<arg name="veh" value="$(arg veh)"/>
	<arg name="local" value="$(arg local)" />
      </include>
    </group>
  </group>
  <!-- End Vehicle Avoidance -->
  
  <!-- Start April Tags -->
  <group if="$(arg apriltags)">

    <!-- Preprocessing -->
    <group if="$(arg preprocessing)">
      <include file="$(find apriltags)/launch/apriltags_preprocessing_node.launch">
 	<arg name="veh" value="$(arg veh)"/>
 	<arg name="config" value="$(arg config)"/>
 	<arg name="param_file_name" value="$(arg pre_param_file_name)"/>
      </include>
    </group>
    
    <!-- Global -->
    <group if="$(arg global)">
      <remap from="apriltags_global_node/image_raw" to="apriltags_preprocessing_node/global_image_raw"/>
      <remap from="apriltags_global_node/camera_info" to="camera_node/camera_info"/>
      <include file="$(find apriltags)/launch/apriltags_node.launch">
 	<arg name="veh" value="$(arg veh)"/>
 	<arg name="sub_node_name" value="global"/>
 	<arg name="config" value="$(arg config)"/>
 	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
     
      <group if="$(arg postprocessing">
	<remap from="apriltags_postprocessing_global_node/apriltags_in" to="apriltags_global_node/apriltags"/> 	
	<include file="$(find apriltags)/launch/apriltags_postprocessing_node.launch">
 	  <arg name="veh" value="$(arg veh)"/>
 	  <arg name="sub_node_name" value="global"/>
 	  <arg name="loc" value="$(arg loc)"/>
	  <arg name="param_file_name" value="$(arg pos_param_file_name)"/>
	  <arg name="config" value="$(arg config)"/>
 	</include>
      </group>
    </group>
    
    <!-- Fast -->
    <group if="$(arg fast)">
      <remap from="apriltags_fast_node/image_raw" to="apriltags_preprocessing_node/fast_image_raw"/>
      <remap from="apriltags_fast_node/camera_info" to="camera_node/camera_info"/>      
      <include file="$(find apriltags)/launch/apriltags_node.launch">
 	<arg name="veh" value="$(arg veh)"/>
 	<arg name="sub_node_name" value="fast"/>
 	<arg name="config" value="$(arg config)"/>
 	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
  
      <group if="$(arg postprocessing">
	<remap from="apriltags_postprocessing_fast_node/apriltags_in" to="apriltags_fast_node/apriltags"/> 	
	<include file="$(find apriltags)/launch/apriltags_postprocessing_node.launch">
 	  <arg name="veh" value="$(arg veh)"/>
 	  <arg name="sub_node_name" value="fast"/>
 	  <arg name="loc" value="$(arg loc)"/>
	  <arg name="param_file_name" value="$(arg pos_param_file_name)"/>
	  <arg name="config" value="$(arg config)"/>
 	</include>
      </group>
    </group>

    <!-- Visualization -->
    <group if="$(arg visualization)">
      <remap from="apriltags_visualizer_fast_node/apriltags_in" to="apriltags_postprocessing_fast_node/apriltags_out"/>
      <remap from="apriltags_visualizer_global_node/apriltags_in" to="apriltags_postprocessing_global_node/apriltags_out"/>
      <include file="$(find apriltags)/launch/apriltags_visualizer_node.launch">
 	<arg name="veh" value="$(arg veh)"/>
 	<arg name="sub_node_name" value="fast"/>
      </include>
      <include file="$(find apriltags)/launch/apriltags_visualizer_node.launch">
 	<arg name="veh" value="$(arg veh)"/>
 	<arg name="sub_node_name" value="global"/>
      </include>
    </group>
  </group>
  <!--End Apriltags -->

  <!-- Start LEDs Detection -->
  <group if="$(arg LED)">
    
    <!-- Detection -->
    <group if="$(arg LED_detection)">
      <include file="$(find led_detection)/launch/LED_detection.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <group if="$(arg LED_joystick)">
      <include file="$(find led_joy_mapper)/launch/led_joy_mapper_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <group if="$(arg LED_emitter)">
      <include file="$(find led_emitter)/launch/led_emitter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <group if="$(arg LED_interpreter)">
      <include file="$(find led_interpreter)/launch/led_interpreter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
    
    <!-- Not launching visualization because it will crash on robot. Can be manually launched from laptop except that things weren't done right in the elemental launch files. Shoule be fixed -->
  </group>

  <!-- End LEDs Detection -->

  <!-- Start Odometry Learning -->
  <group if="$(arg odometery_learning)">
    

    <group if="$(arg kinematics)">
      <!-- run forward_kinematics_node -->
      <remap from="forward_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd_executed" />
      <remap from="forward_kinematics_node/theta_dot_weights" to="kinematics_learning_node/theta_dot_kinematics_weights" />
      <remap from="forward_kinematics_node/v_weights" to="kinematics_learning_node/v_kinematics_weights" />
      <include file="$(find kinematics)/launch/forward_kinematics_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="local" value="$(arg local)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
   

    <group if="$(arg learning)">
      <!-- run the kinematics_learner_node -->
      <remap from="kinematics_learning_node/v_sample" to="$(arg learning_sensor_node)/v_sample" />
      <remap from="kinematics_learning_node/theta_dot_sample" to="$(arg learning_sensor_node)/theta_dot_sample" />
      <include file="$(find kinematics)/launch/kinematics_learning_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="local" value="$(arg local)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <group if="$(arg visual_odometry)">
      <!-- not sure what's supposed to go in here. Is it hte position_filter_node? -->
    </group>

  </group>
  <!-- END Odometry Learning -->

  <!-- Start Coordination -->
  <group if="$(arg coordination)">
    <!-- Vehicle Coordinator-->
    <remap from="veh_coordinator_node/mode" to="fsm_node/mode" />
    <include file="$(find veh_coordinator)/launch/veh_coordinator_node.launch">
      <arg name="veh" value="$(arg veh)"/>        
      <arg name="local" value="$(arg local)"/>        
      <arg name="config" value="$(arg config)"/>        
      <arg name="param_file_name" value="$(arg param_file_name)"/>        
    </include>
  </group>
  <!-- End Coordination -->

  <!-- Start Navigation -->
  <group if="$(arg navigation)">
    
    <group if="$(arg intersection_control)">
      <!-- open loop intersection_controller -->
      <remap from="~mode" to="fsm_node/mode"/>
      <include file="$(find intersection_control)/launch/open_loop_intersection_controller_node.launch">
	<arg name="veh" value="$(arg veh)"/>        
	<arg name="local" value="$(arg local)"/>        
	<arg name="config" value="$(arg config)"/>        
	<arg name="param_file_name" value="$(arg param_file_name)"/>        
      </include>
    </group>

    <group if="$(arg apriltags_random)">
      <!-- random april tags -->
      <remap from="random_april_tag_turns_node/mode" to="fsm_node/mode"/>
      <remap from="random_april_tag_turns_node/tag"  to="apriltags_postprocessing_global_node/apriltags"/>
      <include file="$(find navigation)/launch/random_april_tag_turns_node.launch">
	<arg name="veh" value="$(arg veh)"/>        
	<arg name="local" value="$(arg local)"/>        
	<arg name="config" value="$(arg config)"/>        
	<arg name="param_file_name" value="$(arg param_file_name)"/>        
      </include>
    </group>

    <group if="$(arg graph_planner)">
      <!-- Not sure what to put here -->
    </group>
    
  </group>
  <!-- End Navigation -->


  <!-- Start Global Localization -->
  <group if="$(arg global_localizer)">
    <!-- TODO -->

  </group>
  <!-- End Global Localization -->

  <!-- Start SLAM -->
  <group if="$(arg SLAM)">
    <!-- TODO -->
  </group>

  <!-- Start anti-instagram -->
  <group if="$(arg anti_instagram)">
    <!-- TODO -->
  </group>

</launch>
