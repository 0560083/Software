digraph D {
	fontname="sans";
	subgraph cluster_legend{
		label="legend"
		// ROS Topics
		topic_name;
		// ROS Nodes
		node [shape=box]
		node_name;

		// Connection
		node_name -> topic_name [label="publish"];
		topic_name -> node_name [label="subscribe"];
	}

	subgraph cluster_perception{
		label="perception"
		// TOPIC
		img;
		segment_list;
		image_with_lines;
		lane_reading; //LaneReading: y, phi, sigma_y, sigma_phi, status
		// ROS Nodes
		node [shape=box];
		lane_filter; //tells you y and phi
		line_detector;
		april_tag_detector;
		sign_detector;
		traffic_light_detector;
		vehicle_detector;
		duckie_detector;
		relative_intersection_localizer;
		global_localizer;
		stop_line_detector;
		camera_node;
		led_detector;
		plate_detector;

		// Connections
		camera_node->img;
		
		img->line_detector;
		img->april_tag_detector;
		img->led_detector;
		img->stop_line_detector;
		img->relative_intersection_localizer;
		img->duckie_detector;
		img->vehicle_detector;
		img->traffic_light_detector;
		img->sign_detector;
		img->plate_detector;

		line_detector->segment_list [label="SegmentList.msg"];
		line_detector->image_with_lines [label="sensor_msgs/Image.msg"]
		segment_list->lane_filter;
		lane_filter->lane_reading [label="LaneReading.msg"];
	}

	subgraph cluster_map{
		label="map";
		// TOPICS
		map_representation;
		// ROS Nodes
		node [shape=box];
		map_visualizer;
		map_editor;
		localization;
		planning;
		slam;

		slam -> map_representation;
		map_representation -> map_visualizer;
		map_editor -> map_representation;
		map_representation -> map_editor;
		map_representation -> planning;
		map_representation -> localization;
	}

	subgraph cluster_lane_following{
		label="lane following";
		// TOPICS

		// ROS Nodes
		node [shape=box];
		lane_controller;
		car_emulator;
		car_supervisor;
		joy_node;
		joy_mapper;
		wheel_driver;
		beeper;
		safety_supervisor;
		// CONNECTIONS
		joy_node->joy_mapper [label="sensor_msgs/Joy.msg"];
		joy_mapper-> car_supervisor [label="CarControl.msg"];
		lane_reading->lane_controller [label="LaneReading.msg"];
		lane_controller-> car_supervisor [label="CarControl.msg"];
		//car_supervisor -> beeper [label="std_msgs/Bool.msg"];
		//car_supervisor->car_emulator [label="CarControl.msg"];
		car_supervisor->safety_supervisor [label="CarControl.msg"];
		safety_supervisor->car_emulator [label="CarControl.msg"];
		safety_supervisor->beeper [label="std_msgs/Bool.msg"];
		car_emulator->wheel_driver [label="WheelCmd.msg"];
	}
}