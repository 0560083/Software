digraph D {
	fontname="sans";

	wheel_driver;

	subgraph cluster_legend{
		label="legend"
		// ROS Topics
		topic_name;
		// ROS Nodes
		node [shape=box]
		node_name;

		// Connection
		node_name -> topic_name [label="publish"];
		topic_name -> node_name [label="subscribe"];
	}

	subgraph cluster_perception{
		label="perception"
		// TOPIC
		img_low;
		img_high;
		segment_list;
		image_with_lines;
		lane_reading; //LaneReading: y, phi, sigma_y, sigma_phi, status
		april_tag_detection;
		led_detection;
		veh_detection;
		traffic_light_detection;
		intersection_reading;
		obj_detection;
		global_readings;
		stop_line_reading;

		// ROS Nodes
		node [shape=box];
		lane_filter; //tells you y and phi
		line_detector;
		april_tag_detector;
		//relative_intersection_localizer;
		intersection_filter;
		global_localizer;
		stop_line_filter;
		//sign_detector;
		//traffic_light_detector;
		//vehicle_detector;
		//duckie_detector;
		//relative_intersection_localizer;
		//global_localizer;
		//stop_line_detector;
		camera_node;
		led_detector;
		//plate_detector;
		obj_detector;

		obj_detector->obj_detection;

		// Connections
		camera_node->img_high;
		camera_node->img_low;
		
		img_low->line_detector;
		img_high->april_tag_detector;
		img_low->led_detector;
		//img->stop_line_detector;
		//img->relative_intersection_localizer;
		//img->duckie_detector;
		//img->vehicle_detector;
		//img->traffic_light_detector;
		//img->sign_detector;
		//img->plate_detector;
		img_high->obj_detector;
		led_detector->led_detection;
		led_detection->veh_detector;
		veh_detector->veh_detection;
		led_detection->traffic_light_detector;
		traffic_light_detector->traffic_light_detection;
		intersection_filter->intersection_reading;
		segment_list->stop_line_filter;
		stop_line_filter->stop_line_reading;


		april_tag_detector->april_tag_detection;
		april_tag_detection->intersection_filter;

		line_detector->segment_list [label="SegmentList.msg"];
		line_detector->image_with_lines [label="sensor_msgs/Image.msg"]
		segment_list->lane_filter;
		lane_filter->lane_reading [label="LaneReading.msg"];


		obj_detection->global_localizer;
		april_tag_detection->global_localizer;

	}

	subgraph cluster_map{
		label="map";
		// TOPICS
		map_representation;
		// ROS Nodes
		node [shape=box];
		//map_visualizer;
		//map_editor;
		//localization;
		//planning;
		map_reader;

		map_reader -> map_representation;
		//map_representation -> map_visualizer;
		//map_editor -> map_representation;
		//map_representation -> map_editor;
		//map_representation -> planning;
		//map_representation -> localization;
	}

	subgraph cluster_lane_following{
		label="lane following";
		// TOPICS

		// ROS Nodes
		node [shape=box];
		lane_controller;
		//car_emulator;
		car_supervisor;
		joy_node;
		joy_mapper;
		beeper;
		//safety_supervisor;
		// CONNECTIONS
		joy_node->joy_mapper [label="sensor_msgs/Joy.msg"];
		joy_mapper-> car_supervisor [label="CarControl.msg"];
		lane_reading->lane_controller [label="LaneReading.msg"];
		lane_controller-> car_supervisor [label="CarControl.msg"];
		//car_supervisor -> beeper [label="std_msgs/Bool.msg"];
		//car_supervisor->car_emulator [label="CarControl.msg"];
		//safety_supervisor->car_emulator [label="CarControl.msg"];
		//safety_supervisor->beeper [label="std_msgs/Bool.msg"];
		//car_emulator->wheel_driver [label="WheelCmd.msg"];
		//safety_supervisor->wheel_driver;
	}

	mode;
	mission;

	node [shape=box];
	intersection_controller;
	safety_supervisor;
	wheel_driver;
	mission_planner;

	global_localizer->global_readings;

	safety_supervisor->wheel_driver;
	intersection_reading->intersection_controller;
	traffic_light_detection->intersection_controller;
	veh_detection->safety_supervisor;
	car_supervisor->safety_supervisor [label="CarControl.msg"];
	intersection_controller->safety_supervisor;
	stop_line_reading->lane_controller;


	map_representation->global_localizer;
	global_readings->mission_planner;
	mission_planner->mode;
	mode->intersection_controller;
	mode->lane_controller;
	map_representation->mission_planner;
	mission->mission_planner;
	stop_line_reading->mission_planner;
	lane_reading->mission_planner;
	intersection_reading->mission_planner;
	safety_supervisor->beeper;


	//Remove the clusters
	//mission, joy, map are the inputs
	//outputs are the wheel_driver and the beeper
}